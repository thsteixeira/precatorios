"""
Django settings for precatorios project.

Generated by 'django-admin startproject' using Django 3.1.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_-j533-d^w2s#0z6!6n&0_oxntro6rl=m2xca$kppy8l8*hxi5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'precapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'precapp.middleware.UserTrackingMiddleware',
]

ROOT_URLCONF = 'precatorios.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'precapp' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'precatorios.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Date format settings for Brazilian localization
DATE_FORMAT = 'd/m/Y'
DATETIME_FORMAT = 'd/m/Y H:i'
SHORT_DATE_FORMAT = 'd/m/Y'
SHORT_DATETIME_FORMAT = 'd/m/Y H:i'

DATE_INPUT_FORMATS = [
    '%d/%m/%Y',     # Brazilian format: 31/12/2023
    '%d-%m-%Y',     # Alternative: 31-12-2023
    '%Y-%m-%d',     # ISO format: 2023-12-31 (fallback)
]

DATETIME_INPUT_FORMATS = [
    '%d/%m/%Y %H:%M:%S',    # 31/12/2023 14:30:00
    '%d/%m/%Y %H:%M',       # 31/12/2023 14:30
    '%d-%m-%Y %H:%M:%S',    # 31-12-2023 14:30:00
    '%d-%m-%Y %H:%M',       # 31-12-2023 14:30
    '%Y-%m-%d %H:%M:%S',    # ISO fallback
    '%Y-%m-%d %H:%M',       # ISO fallback
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# STATIC_ROOT é o caminho absoluto no sistema de arquivos para onde o `collectstatic`
# irá copiar todos os arquivos estáticos para o deploy.
# RECOMENDADO: Fora do diretório do seu projeto.
STATIC_ROOT = os.path.join('/var/www', 'precatorios', 'static')

# STATICFILES_DIRS (opcional, mas comum) diz ao Django onde encontrar arquivos estáticos
# que não estão dentro de uma pasta 'static' de um app específico.
# Por exemplo, um diretório 'static' na raiz do projeto.
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Authentication settings
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'login'

# Media files (User uploaded files)
# This is the recommended approach for handling user uploads
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# File upload settings
FILE_UPLOAD_MAX_MEMORY_SIZE = 52428800  # 50MB in bytes
DATA_UPLOAD_MAX_MEMORY_SIZE = 52428800  # 50MB in bytes
FILE_UPLOAD_PERMISSIONS = 0o644  # Read/write for owner, read-only for group and others
