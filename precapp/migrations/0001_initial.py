# Generated by Django 3.1.12 on 2025-09-06 18:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import precapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alvara',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_principal', models.FloatField()),
                ('honorarios_contratuais', models.FloatField(blank=True, default=0.0, null=True)),
                ('honorarios_sucumbenciais', models.FloatField(blank=True, default=0.0, null=True)),
                ('tipo', models.CharField(max_length=100)),
                ('fase_ultima_alteracao', models.DateTimeField(blank=True, help_text='Data e hora da última alteração da fase principal', null=True)),
                ('fase_alterada_por', models.CharField(blank=True, help_text='Usuário que fez a última alteração da fase principal', max_length=200, null=True)),
                ('fase_honorarios_ultima_alteracao', models.DateTimeField(blank=True, help_text='Data e hora da última alteração da fase de honorários contratuais', null=True)),
                ('fase_honorarios_alterada_por', models.CharField(blank=True, help_text='Usuário que fez a última alteração da fase de honorários contratuais', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('cpf', models.CharField(help_text='CPF ou CNPJ do cliente', max_length=18, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=400)),
                ('nascimento', models.DateField(blank=True, null=True)),
                ('prioridade', models.BooleanField()),
                ('observacao', models.TextField(blank=True, help_text='Observações gerais sobre o cliente', null=True, verbose_name='Observações')),
            ],
        ),
        migrations.CreateModel(
            name='Diligencias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_final', models.DateField(help_text='Data limite para conclusão da diligência')),
                ('urgencia', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta')], default='media', help_text='Nível de urgência da diligência', max_length=20)),
                ('criado_por', models.CharField(help_text='Nome do usuário que criou a diligência', max_length=200)),
                ('descricao', models.TextField(blank=True, help_text='Descrição opcional da diligência', null=True)),
                ('concluida', models.BooleanField(default=False, help_text='Indica se a diligência foi concluída')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação da diligência')),
                ('data_conclusao', models.DateTimeField(blank=True, help_text='Data e hora de conclusão da diligência', null=True)),
                ('concluido_por', models.CharField(blank=True, help_text='Nome do usuário que concluiu a diligência', max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Diligência',
                'verbose_name_plural': 'Diligências',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Fase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da fase', max_length=100)),
                ('descricao', models.TextField(blank=True, help_text='Descrição opcional da fase')),
                ('cor', models.CharField(default='#6c757d', help_text='Cor da fase em hexadecimal (ex: #007bff)', max_length=7)),
                ('tipo', models.CharField(choices=[('alvara', 'Alvará'), ('requerimento', 'Requerimento'), ('ambos', 'Ambos (Alvará e Requerimento)')], default='ambos', help_text='Define se a fase é específica para Alvarás, Requerimentos ou ambos', max_length=20)),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição (números menores aparecem primeiro)')),
                ('ativa', models.BooleanField(default=True, help_text='Se esta fase está ativa para uso')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fase Principal',
                'verbose_name_plural': 'Fases Principais',
                'ordering': ['ordem', 'tipo', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='FaseHonorariosContratuais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da fase de honorários contratuais', max_length=100)),
                ('descricao', models.TextField(blank=True, help_text='Descrição opcional da fase')),
                ('cor', models.CharField(default='#28a745', help_text='Cor da fase em hexadecimal (ex: #28a745)', max_length=7)),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição (números menores aparecem primeiro)')),
                ('ativa', models.BooleanField(default=True, help_text='Se esta fase está ativa para uso')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fase Honorários Contratuais',
                'verbose_name_plural': 'Fases Honorários Contratuais',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='PedidoRequerimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do tipo de pedido', max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, help_text='Descrição opcional do tipo de pedido', null=True)),
                ('cor', models.CharField(default='#007bff', help_text='Cor em hexadecimal para identificação visual (ex: #007bff)', max_length=7)),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição (números menores aparecem primeiro)')),
                ('ativo', models.BooleanField(default=True, help_text='Se este tipo está ativo para uso')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Pedido de Requerimento',
                'verbose_name_plural': 'Tipos de Pedidos de Requerimento',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Precatorio',
            fields=[
                ('cnj', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('orcamento', models.IntegerField(blank=True, help_text='Ano do orçamento (formato: YYYY)', null=True, validators=[django.core.validators.MinValueValidator(1988), django.core.validators.MaxValueValidator(2050)])),
                ('origem', models.CharField(max_length=200)),
                ('credito_principal', models.CharField(choices=[('pendente', 'Pendente'), ('parcial', 'Parcial'), ('quitado', 'Quitado'), ('vendido', 'Vendido')], default='pendente', help_text='Status de pagamento do crédito principal', max_length=20)),
                ('honorarios_contratuais', models.CharField(choices=[('pendente', 'Pendente'), ('parcial', 'Parcial'), ('quitado', 'Quitado'), ('vendido', 'Vendido')], default='pendente', help_text='Status de pagamento dos honorários contratuais', max_length=20)),
                ('honorarios_sucumbenciais', models.CharField(choices=[('pendente', 'Pendente'), ('parcial', 'Parcial'), ('quitado', 'Quitado'), ('vendido', 'Vendido')], default='pendente', help_text='Status de pagamento dos honorários sucumbenciais', max_length=20)),
                ('valor_de_face', models.FloatField()),
                ('ultima_atualizacao', models.FloatField(blank=True, null=True)),
                ('data_ultima_atualizacao', models.DateField(blank=True, null=True)),
                ('percentual_contratuais_assinado', models.FloatField(blank=True, null=True)),
                ('percentual_contratuais_apartado', models.FloatField(blank=True, null=True)),
                ('percentual_sucumbenciais', models.FloatField(blank=True, null=True)),
                ('observacao', models.TextField(blank=True, help_text='Observações gerais sobre o precatório', null=True, verbose_name='Observações')),
                ('integra_precatorio', models.FileField(blank=True, help_text='Íntegra do precatório em PDF (máximo 50MB)', null=True, upload_to='precatorios/documentos/%Y/%m/', validators=[precapp.models.validate_file_size, precapp.models.validate_pdf_extension], verbose_name='Íntegra do precatório')),
                ('clientes', models.ManyToManyField(related_name='precatorios', to='precapp.Cliente')),
            ],
            options={
                'verbose_name': 'Precatório',
                'verbose_name_plural': 'Precatórios',
                'ordering': ['cnj'],
            },
        ),
        migrations.CreateModel(
            name='Tipo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do tipo de precatório', max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, help_text='Descrição opcional do tipo')),
                ('cor', models.CharField(default='#007bff', help_text='Cor do tipo em hexadecimal (ex: #007bff)', max_length=7)),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição (números menores aparecem primeiro)')),
                ('ativa', models.BooleanField(default=True, help_text='Se este tipo está ativo para uso')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Precatório',
                'verbose_name_plural': 'Tipos de Precatórios',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='TipoDiligencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do tipo de diligência', max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, help_text='Descrição opcional do tipo de diligência', null=True)),
                ('cor', models.CharField(default='#007bff', help_text='Cor em hexadecimal para identificação visual (ex: #007bff)', max_length=7)),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição (números menores aparecem primeiro)')),
                ('ativo', models.BooleanField(default=True, help_text='Se este tipo está ativo para uso')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Diligência',
                'verbose_name_plural': 'Tipos de Diligência',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Requerimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.FloatField()),
                ('desagio', models.FloatField()),
                ('fase_ultima_alteracao', models.DateTimeField(blank=True, help_text='Data e hora da última alteração da fase', null=True)),
                ('fase_alterada_por', models.CharField(blank=True, help_text='Usuário que fez a última alteração da fase', max_length=200, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='precapp.cliente')),
                ('fase', models.ForeignKey(blank=True, help_text='Fase principal atual do requerimento', null=True, on_delete=django.db.models.deletion.PROTECT, to='precapp.fase')),
                ('pedido', models.ForeignKey(help_text='Selecione o tipo de pedido.', limit_choices_to={'ativo': True}, on_delete=django.db.models.deletion.PROTECT, to='precapp.pedidorequerimento')),
                ('precatorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='precapp.precatorio')),
            ],
            options={
                'verbose_name': 'Requerimento',
                'verbose_name_plural': 'Requerimentos',
            },
        ),
        migrations.AddField(
            model_name='precatorio',
            name='tipo',
            field=models.ForeignKey(blank=True, help_text='Tipo do precatório (ex: Alimentar, Comum, etc.)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='precapp.tipo'),
        ),
        migrations.AddConstraint(
            model_name='fase',
            constraint=models.UniqueConstraint(fields=('nome', 'tipo'), name='unique_fase_nome_tipo'),
        ),
        migrations.AddField(
            model_name='diligencias',
            name='cliente',
            field=models.ForeignKey(help_text='Cliente relacionado à diligência', on_delete=django.db.models.deletion.CASCADE, related_name='diligencias', to='precapp.cliente'),
        ),
        migrations.AddField(
            model_name='diligencias',
            name='responsavel',
            field=models.ForeignKey(blank=True, help_text='Usuário responsável por concluir a diligência', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='diligencias_responsavel', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='diligencias',
            name='tipo',
            field=models.ForeignKey(help_text='Tipo da diligência', limit_choices_to={'ativo': True}, on_delete=django.db.models.deletion.PROTECT, to='precapp.tipodiligencia'),
        ),
        migrations.AddField(
            model_name='alvara',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='precapp.cliente'),
        ),
        migrations.AddField(
            model_name='alvara',
            name='fase',
            field=models.ForeignKey(blank=True, help_text='Fase principal atual do alvará', null=True, on_delete=django.db.models.deletion.PROTECT, to='precapp.fase'),
        ),
        migrations.AddField(
            model_name='alvara',
            name='fase_honorarios_contratuais',
            field=models.ForeignKey(blank=True, help_text='Fase específica para honorários contratuais', null=True, on_delete=django.db.models.deletion.PROTECT, to='precapp.fasehonorarioscontratuais', verbose_name='Fase Honorários Contratuais'),
        ),
        migrations.AddField(
            model_name='alvara',
            name='precatorio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='precapp.precatorio'),
        ),
    ]
